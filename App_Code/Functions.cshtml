<!-- 这里应该是个重点区域的啊。。。 -->

@using System.Text;
@using System.Security.Cryptography;
@using System.Text.RegularExpressions
@functions{

    public static bool teachermajors(string majors,int allmajors)
    {
        bool t = false;
        string[] majorArr = majors.Split(',');
        foreach (var i in majorArr)
        {
            if (Convert.ToInt16(i) == allmajors)
            {
                t = true;
                break;
            }
        }
        return t;
    }

    public static string students_value(int sid)
    {

        var db = Database.Open("ctXueji");
        var student = "select * from students where id = " + sid;
        var sc = db.QuerySingle(student);
        var coursesA = "select * from View_coursesArranging_exams_scores";
        Dictionary<int, int> str = new Dictionary<int, int>();
        string json = "[";
        int item = 1;
        foreach (var row in db.Query(coursesA))
        {
            string temp = row.classes_id;
            string[] temparr = temp.Split(',');
            int a = 0;
            foreach (var i in temparr)
            {
                int tointi = Convert.ToInt16(i);
                if (tointi == sc.classes_id)
                {
                    a = 1;
                    break;
                }
            }
            if (a == 1)
            {
                str = Functions.StringToDictionary(row.students_value);
                int value = 0;
                foreach (var i in str)
                {
                    if (i.Key == sid)
                    {
                        value = i.Value;
                        break;
                    }
                }
                if (item == 1)
                {
                    json += "{\"Name\" :\"" + row.exams_name + "\", \"Type\" : \"" + row.exams_type + "\", \"Date\" : \"" + row.exams_date + "\", \"Value\" : \"" + value + "\" }";
                }
                else
                {
                    json += ",{\"Name\" :\"" + row.exams_name + "\", \"Type\" : \"" + row.exams_type + "\", \"Date\" : \"" + row.exams_date + "\", \"Value\" : \"" + value + "\" }";
                }
                item++;
                //JObject item = new JObject(new JProperty("name", row.exams_name), new JProperty("type", row.exams_type), new JProperty("date", row.exams_date), new JProperty("value", value));
                //staff["students"].Last.AddAfterSelf(item);
            }
        }
        json += "]";
        return json;
    }


    public static void Sessions()
    {
        var db = Database.Open("ctXueji");
        var time = DateTime.Now;
        var timeyear = time.Year;
        var weekArranging = "select * from weekArranging where wa_years = " + timeyear;
        foreach (var weekA in db.Query(weekArranging))
        {
            if (Functions.NowYearsWeek() > weekA.wa_startWeek && Functions.NowYearsWeek() < weekA.wa_endWeek)
            {
                Session["session"] = weekA.id;
            }
        }
    }


    public static int NowYearsWeek()//今年到现在为止过了多少周
    {
        string[] weekdays = { "7", "1", "2", "3", "4", "5", "6" };

        string nowyear = DateTime.Now.Year.ToString();
        string weeks = weekdays[Convert.ToInt32(Convert.ToDateTime(nowyear + "-01-01").DayOfWeek)];
        var weeksint = Convert.ToInt16(weeks);
        var time = DateTime.Now;
        int yeardays = time.DayOfYear;
        int goday = 0;
        if (weeksint == 1)     //本年的第几周
        {
            goday = yeardays / 7;
            goday += 1;
        }
        else
        {
            goday = (yeardays + weeksint - 1) / 7;
        }
        return goday;
    }

    public static int yearfirst(DateTime t)//今天是周几
    {
        string[] weekdays = { "7", "1", "2", "3", "4", "5", "6" };
        string weeks = weekdays[Convert.ToInt32(t.DayOfWeek)];
        var weeksint = Convert.ToInt16(weeks);
        return weeksint;
    }


    public static int historyNow(DateTime Now)
    {
        int lessons = 0;

        var os = Convert.ToDateTime("07:55:00");
        var ox = Convert.ToDateTime("9:30:00");//1
        var ts = Convert.ToDateTime("9:55:00");
        var tx = Convert.ToDateTime("11:30:00");//2
        var ss = Convert.ToDateTime("12:55:00");
        var sx = Convert.ToDateTime("14:30:00");//3
        var fos = Convert.ToDateTime("14:55:00");
        var fox = Convert.ToDateTime("16:30:00");//4
        var fis = Convert.ToDateTime("16:55:00");
        var fix = Convert.ToDateTime("18:30:00");//5
        if (Now >= os && Now <= ox)
        {
            lessons = 1;
        }
        if (Now >= ts && Now <= tx)
        {
            lessons = 2;
        }
        if (Now >= ss && Now <= sx)
        {
            lessons = 3;
        }
        if (Now >= fos && Now <= fox)
        {
            lessons = 4;
        }
        if (Now >= fis && Now <= fix)
        {
            lessons = 5;
        }
        return lessons;
    }

    public static int lessonsNow()
    {
        DateTime Now = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
        int lessons = 0;
        var os = Convert.ToDateTime("07:55:00");
        var ox = Convert.ToDateTime("9:30:00");//1
        var ts = Convert.ToDateTime("9:55:00");
        var tx = Convert.ToDateTime("11:30:00");//2
        var ss = Convert.ToDateTime("12:55:00");
        var sx = Convert.ToDateTime("14:30:00");//3
        var fos = Convert.ToDateTime("14:55:00");
        var fox = Convert.ToDateTime("16:30:00");//4
        var fis = Convert.ToDateTime("16:55:00");
        var fix = Convert.ToDateTime("18:30:00");//5
        if (Now >= os && Now <= ox)
        {
            lessons = 1;
        }
        if (Now >= ts && Now <= tx)
        {
            lessons = 2;
        }
        if (Now >= ss && Now <= sx)
        {
            lessons = 3;
        }
        if (Now >= fos && Now <= fox)
        {
            lessons = 4;
        }
        if (Now >= fis && Now <= fix)
        {
            lessons = 5;
        }
        return lessons;
    }

    public static string userMethods_login(string input_Name, string input_Password,string input_usertype)
    {
        if(input_usertype == "true")
        {
            //input_Password=MD5Encrypt16(input_Password);
            var db = Database.Open("ctXueji");
            var select = "select *from users where username = @0 and password = @1";
            var row = db.QuerySingle(select, input_Name, input_Password);
            if (row != null){
                if (row.authority == 4)
                {
                    Session["name"] = row.name;
                    Session["username"] = row.username;
                    Session["authority"] = row.authority;
                    return "TFOK";
                }
                Session["name"] = row.name;
                Session["username"] = row.username;
                Session["authority"] = row.authority;
                return "TOK";
            }else
            {
                return "tfail";
            }
        }else if(input_usertype == "false")
        {
            //input_Password=MD5Encrypt16(input_Password);
            var db = Database.Open("ctXueji");
            var select = "select *from students where students_number = @0 and students_password = @1";
            var row = db.QuerySingle(select, input_Name, input_Password);
            if (row != null){
                Session["id"] = row.id;
                Session["name"] = row.students_name;
                return "SOK";
            }else
            {
                return "sfail";
            }
        }
        else
        {
            return "wtf";
        }

    }
    public static string sessionChange(int t)
    {
        string change = "";
        change = t == 2 ? "下学期" : "上学期";
        return change;
    }

    public static int session(string t)
    {
        int temp = 0;
        if (t == "02" || t == "03")
        {
            temp = 2;//下学期
        }
        else if (t == "08" || t == "09")
        {
            temp = 1;//上学期
        }
        return temp;
    }

    public static string sessiontime(string t)
    {
        string temp = "";

        switch (t)
        {
            case "1":
                temp = "01";
                break;
            case "2":
                temp = "02";
                break;
            case "3":
                temp = "03";
                break;
            case "4":
                temp = "04";
                break;
            case "5":
                temp = "05";
                break;
            case "6":
                temp = "06";
                break;
            case "7":
                temp = "07";
                break;
            case "8":
                temp = "08";
                break;
            case "9":
                temp = "09";
                break;
            default:
                temp = t;
                break;
        }
        return temp;
    }

    public static string Classesing(int t,string time_stamp)
    {
        string temp = "";
        string[] weekdays = { "7", "1", "2", "3", "4", "5", "6" };
        string week = weekdays[Convert.ToInt32(DateTime.Now.DayOfWeek)];
        if(t == Convert.ToInt16(week))
        {
            var dbTime = Convert.ToDateTime(time_stamp);
            var nowTime = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
            if (nowTime > dbTime)
            {
                var subTime = nowTime - dbTime;
                var subTimeh = subTime.Hours;
                var subTimem = subTime.Minutes;
                int min = subTimeh * 60 + subTimem;
                if (min <= 90)
                {
                    temp = "ing";
                }
            }
        }
        return temp;
    }
    public static string LessonsOrder(int t)
    {
        string temp = "";

        switch (t)
        {
            case 1:
                temp = "第一大节";
                break;
            case 2:
                temp = "第二大节";
                break;
            case 3:
                temp = "第三大节";
                break;
            case 4:
                temp = "第四大节";
                break;
            case 5:
                temp = "第五大节";
                break;
            default:
                temp = "";
                break;
        }
        return temp;
    }

    public static string MD5Encrypt16(string tobeEncrypt)
    {
        var md5 = new MD5CryptoServiceProvider();
        string resultStr = BitConverter.ToString(md5.ComputeHash(Encoding.Default.GetBytes(tobeEncrypt)), 4, 8);
        resultStr = resultStr.Replace("-", "");
        return resultStr;
    }
    public static bool ExemptTime(string exempt)
    {
        if(string.IsNullOrEmpty(exempt)){
            return false;
        }
        var t = DateTime.Now;
        var t30 = Convert.ToDateTime(exempt);
        if (t > t30)
        {
            return false;
        }
        else if (t <= t30)
        {
            return true;
        }
        return false;
    }

    public static bool Times(string time_stamp)
    {
        var t = false;
        var sqltime = Convert.ToDateTime(time_stamp);
        var nowtime = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
        if (nowtime > sqltime)
        {
            var subtime = nowtime - sqltime;
            var subtimeh = subtime.Hours;
            var subtimem = subtime.Minutes;
            int min = subtimeh * 60 + subtimem;
            if (min <= 90)
            {
                t = true;
            }
        }
        return t;
    }

    public static string workTime()
    {
        var t = "上课时间";
        var nowtime = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
        var sone = Convert.ToDateTime("09:30:00");
        var sonem = Convert.ToDateTime("10:00:00");
        var stwo = Convert.ToDateTime("11:30:00");
        var stwom = Convert.ToDateTime("13:00:00");
        var xone = Convert.ToDateTime("14:30:00");
        var xonem = Convert.ToDateTime("15:00:00");
        var xtwo = Convert.ToDateTime("16:30:00");
        var xtwos = Convert.ToDateTime("17:00:00");
        var noonTimeStart = Convert.ToDateTime("11:30:00");
        var noonTimeEnd = Convert.ToDateTime("13:00:00");
        var workTimeStart = Convert.ToDateTime("08:00:00");
        var workTimeEnd = Convert.ToDateTime("18:00:00");
        if (nowtime >= workTimeStart && nowtime < workTimeEnd)
        {
            if (nowtime >= sone && nowtime < sonem || nowtime >= stwo && nowtime < stwom ||
                nowtime >= xone && nowtime < xonem || nowtime >= xtwo && nowtime < xtwos)
            { t = "课间休息";}
            else if (nowtime >= noonTimeStart && nowtime < noonTimeEnd)
            { t = "午休时间";}
        }else
        {
            t = "课余时间";
        }
        return t;
    }

    public static int WeekChange(string week)
    {
        int w = 0;
        switch (week)
        {
            case "一":
                w = 1;
                break;
            case "二":
                w = 2;
                break;
            case "三":
                w = 3;
                break;
            case "四":
                w = 4;
                break;
            case "五":
                w = 5;
                break;
            case "六":
                w = 6;
                break;
            case "日":
                w = 7;
                break;
            default:
                w = 0;
                break;
        }
        return w;
    }

    public static Dictionary<int, int> StringToDictionary(string value)
    {
        Dictionary<int, int> str = new Dictionary<int, int>();
        string[] temp = value.Split('|');
        foreach (var i in temp)
        {
            string[] temparry = i.Split('=');
            int x = 1;
            int getKey = 0;
            int getValue = 0;
            foreach (var y in temparry)
            {
                if (x == 1)
                {
                    getKey = Convert.ToInt16(y);
                }
                else
                {
                    getValue = Convert.ToInt16(y);
                }
                x++;
            }
            str.Add(getKey, getValue);
        }
        return str;
    }

    public static string DictionaryToString(Dictionary<int, int> value)
    {
        string str = "";
        int temp = value.Count;
        if (temp == 0)
        {
            return str;
        }
        int p = 1;
        foreach (var i in value)
        {
            if (p == 1)
            {
                str = str + i.Key + "=" + i.Value;
            }
            else
            {
                str = str + "|" + i.Key + "=" + i.Value;
            }
            p++;
        }
        return str;
    }


}
@var db = Database.Open("ctXueji");
@int Authority=Convert.ToInt16(Session["authority"]);
