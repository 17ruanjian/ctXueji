<!-- 这里应该是个重点区域的啊。。。 -->

@using System.Text;
@using System.Security.Cryptography;
@functions{
    public static string MD5Encrypt16(string tobeEncrypt)
    {
        var md5 = new MD5CryptoServiceProvider();
        string resultStr = BitConverter.ToString(md5.ComputeHash(Encoding.Default.GetBytes(tobeEncrypt)), 4, 8);
        resultStr = resultStr.Replace("-", "");
        return resultStr;
    }
    public static bool ExemptTime(string exempt)
    {
        var t = DateTime.Now;
        var t30 = Convert.ToDateTime(exempt);
        var f = false;
        if (t > t30)
        {
            return f;
        }
        else if (t <= t30)
        {
            f = true;
        }
        return f;
    }

    public static bool Times(string time_stamp)
    {
        var t = false;
        var sqltime = Convert.ToDateTime(time_stamp);
        var nowtime = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
        if (nowtime > sqltime)
        {
            var subtime = nowtime - sqltime;
            var subtimeh = subtime.Hours;
            var subtimem = subtime.Minutes;
            int min = subtimeh * 60 + subtimem;
            if (min <= 90)
            {
                t = true;
            }
        }
        return t;
    }

    public static string LearnTime()
    {
        var t = "";
        var nowtime = Convert.ToDateTime(DateTime.Now.ToLongTimeString());
        var sone = "09:30:00";
        var sonem = "10:00:00";
        var stwo = "11:30:00";
        var stwom = "13:00:00";
        var xone = "14:30:00";
        var xonem = "15:00:00";
        var xtwo = "16:30:00";
        var xtwos = "17:00:00";
        if(nowtime >= Convert.ToDateTime(sone) && nowtime < Convert.ToDateTime(sonem))
        {
            t = "课间休息。。。。。。";
        }
        if (nowtime >= Convert.ToDateTime(stwo) && nowtime < Convert.ToDateTime(stwom))
        {
            t = "课间休息。。。。。。";
        }
        if (nowtime >= Convert.ToDateTime(xone) && nowtime < Convert.ToDateTime(xonem))
        {
            t = "课间休息。。。。。。";
        }
        if (nowtime >= Convert.ToDateTime(xtwo) && nowtime < Convert.ToDateTime(xtwos))
        {
            t = "课间休息。。。。。。";
        }
        return t;
    }

    public static int WeekChange(string week)
    {
        int w = 0;
        switch (week)
        {
            case "一":
                w = 1;
                break;
            case "二":
                w = 2;
                break;
            case "三":
                w = 3;
                break;
            case "四":
                w = 4;
                break;
            case "五":
                w = 5;
                break;
            case "六":
                w = 6;
                break;
            case "日":
                w = 7;
                break;
            default:
                w = 0;
                break;
        }
        return w;
    }

public static Dictionary<int, int> StringToDictionary(string value)
    {
        Dictionary<int, int> str = new Dictionary<int, int>();
        string[] temp = value.Split('|');
        foreach (var i in temp)
        {
            string[] temparry = i.Split('=');
            int x = 1;
            int getKey = 0;
            int getValue = 0;
            foreach (var y in temparry)
            {
                if (x == 1)
                {
                    getKey = Convert.ToInt16(y);
                }
                else
                {
                    getValue = Convert.ToInt16(y);
                }
                x++;
            }
            str.Add(getKey, getValue);
        }
        return str;
    }

    public static string DictionaryToString(Dictionary<int, int> value)
    {
        string str = "";
        int temp = value.Count;
        if (temp == 0)
        {
            return str;
        }
        int p = 1;
        foreach (var i in value)
        {
            if (p == 1)
            {
                str = str + i.Key + "=" + i.Value;
            }
            else
            {
                str = str + "|" + i.Key + "=" + i.Value;
            }
            p++;
        }
        return str;
    }
    	

}
@var db = Database.Open("ctXueji");
@int Authority=Convert.ToInt16(Session["authority"]);